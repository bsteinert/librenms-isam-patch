diff --git a/includes/definitions/discovery/nokia-isam.yaml b/includes/definitions/discovery/nokia-isam.yaml
index 79005b0e7..02f3e9ab9 100644
--- a/includes/definitions/discovery/nokia-isam.yaml
+++ b/includes/definitions/discovery/nokia-isam.yaml
@@ -1,4 +1,4 @@
-mib: ASAM-SYSTEM-MIB:ASAM-EQUIP-MIB
+mib: ASAM-SYSTEM-MIB:ASAM-EQUIP-MIB:ASAM-ALARM-MIB
 modules:
     mempools:
         pre-cache:
@@ -30,9 +30,37 @@ modules:
                     oid: eqptFanMode
                     num_oid: .1.3.6.1.4.1.637.61.1.23.1.9.0
                     descr: Fan Mode
+                    group: 'Hardware'
                     state_name: fanMode
                     states:
                         - { value: 0, generic: 0, graph: 0, descr: default }
                         - { value: 1, generic: 1, graph: 0, descr: eco }
                         - { value: 2, generic: 0, graph: 0, descr: protect }
                         - { value: 3, generic: 0, graph: 0, descr: classic }
+                -
+                    oid: asamNumberofAlarmEntries
+                    num_oid:  .1.3.6.1.4.1.637.61.1.3.4.0
+                    descr: 'Alarm: Current Count'
+                    group: 'Alarms'
+                    state_name: alarmCount
+                    states:
+                        - { value: 0, generic: 0, graph: 0, descr: 0 }
+                        - { value: 1, generic: 1, graph: 0, descr: 1 }
+                        - { value: 2, generic: 1, graph: 0, descr: 2 }
+                        - { value: 3, generic: 2, graph: 0, descr: 3 }
+                        - { value: 4, generic: 2, graph: 0, descr: 4 }
+                        - { value: 5, generic: 2, graph: 0, descr: 5 }
+                        - { value: 6, generic: 2, graph: 0, descr: 6 }
+                -
+                    oid: asamCurrentAlarmSeverityStatus
+                    num_oid: .1.3.6.1.4.1.637.61.1.3.5.0
+                    descr: 'Alarm: Current Status'
+                    group: 'Alarms'
+                    state_name: alarmCurrentSeverityStatus
+                    states:
+                        - { value: 1, generic: 0, graph: 0, descr: NoDefect }
+                        - { value: 2, generic: 3, graph: 0, descr: Indeterminate }
+                        - { value: 4, generic: 1, graph: 0, descr: Warning }
+                        - { value: 8, generic: 1, graph: 0, descr: Minor }
+                        - { value: 16, generic: 2, graph: 0, descr: Major }
+                        - { value: 32, generic: 2, graph: 0, descr: Critical }
diff --git a/includes/discovery/sensors/pre-cache/nokia-isam.inc.php b/includes/discovery/sensors/pre-cache/nokia-isam.inc.php
index 1dcf4f211..c854ebb94 100644
--- a/includes/discovery/sensors/pre-cache/nokia-isam.inc.php
+++ b/includes/discovery/sensors/pre-cache/nokia-isam.inc.php
@@ -1,6 +1,116 @@
 <?php
 
-echo 'ISAM Slot/Port Mapping ';
+// Lookup the Isam Port Numbering Method
+$asamPortNumberingMethod = snmp_getnext($device, 'asamPortNumberingMethodSystem', '-Ovq', 'ASAM-SYSTEM-MIB', 'nokia');
+$eqptHolderActualType = snmp_get($device, 'eqptHolderActualType.17', '-Ovq', 'ASAM-EQUIP-MIB', 'nokia');
+echo 'ISAM Slot/Port Mapping for '.$eqptHolderActualType.'';
+
+//Typ to prodcut name
+$eqptHolderTable = [
+    'NFXS-B' => 'Shelf: ISAM 7330',
+    'NFXR-A' => 'Shelf: ISAM 7356',
+    'NFXS-F' => 'Shelf: ISAM 7360',
+    'CFXR-A' => 'Shelf: ISAM 7362',
+];
+
+if ($asamPortNumberingMethod == 'positionBasedSlotId') {
+// Slot mapping for "positionBasedSlotId" (see ASAM-SYSTEM-MIB)
+// also hardcoded because of no reference found in MIB but matched on DSLAM typ (eqptHolderActualTyp)
+// acutal tested on ISAM 7330/56/60/62
+// Nokia IDs for ISAM 7330
+    if ($eqptHolderActualType == 'NFXS-B') {
+        $slotTable = [
+            '4352' => 'ntio-1:',
+            '4353' => 'nt-a:',
+            '4354' => 'nt-b:',
+            '4355' => 'lt:1/1/4:',
+            '4356' => 'lt:1/1/5:',
+            '4357' => 'lt:1/1/6:',
+            '4358' => 'lt:1/1/7:',
+            '4359' => 'lt:1/1/8:',
+            '4360' => 'lt:1/1/9:',
+            '4361' => 'lt:1/1/10:',
+            '4362' => 'lt:1/1/11:',
+            '4417' => 'vlt:1/1/63:',
+            '4418' => 'vlt:1/1/64:',
+            '12545' => 'ctrl:3/1:',
+            '12547' => 'lt:3/1/1:',
+            '12548' => 'lt:3/1/2:',
+            '16641' => 'ctrl:4/1:',
+            '16643' => 'lt:4/1/1:',
+            '16644' => 'lt:4/1/2:',
+            '20737' => 'ctrl:5/1:',
+            '20739' => 'lt:5/1/1:',
+            '20740' => 'lt:5/1/2:',
+            '24833' => 'ctrl:6/1:',
+            '24835' => 'lt:6/1/1:',
+            '24836' => 'lt:6/1/2:',
+            '28929' => 'ctrl:7/1:',
+            '28931' => 'lt:7/1/1:',
+            '28932' => 'lt:7/1/2:',
+	];
+// Slot IDs for Nokia ISAM 7356
+    } elseif ($eqptHolderActualType == 'NFXR-A') {
+        $slotTable = [
+            '4353' => 'nt:',
+            '4355' => 'lt:1/1/1:',
+            '4356' => 'lt:1/1/2:',
+            '12545' => 'ctrl:3/1:',
+            '12547' => 'lt:3/1/1:',
+            '12548' => 'lt:3/1/2:',
+            '16641' => 'ctrl:4/1:',
+            '16643' => 'lt:4/1/1:',
+            '16644' => 'lt:4/1/2:',
+            '20737' => 'ctrl:5/1:',
+            '20739' => 'lt:5/1/1:',
+            '20740' => 'lt:5/1/2:',
+            '24833' => 'ctrl:6/1:',
+            '24835' => 'lt:6/1/1:',
+            '24836' => 'lt:6/1/2:',
+            '28929' => 'ctrl:7/1:',
+            '28931' => 'lt:7/1/1:',
+            '28932' => 'lt:7/1/2:',
+	];
+// Slot IDs for Nokia ISAM 7360
+    } elseif ($eqptHolderActualType == 'NFXS-F') {
+        $slotTable = [
+            '4352' => 'acu:1/1:',
+            '4353' => 'nt-a:',
+            '4354' => 'nt-b:',
+            '4355' => 'lt:1/1/4:',
+            '4356' => 'lt:1/1/5:',
+            '4357' => 'lt:1/1/6:',
+            '4358' => 'lt:1/1/7:',
+            '4359' => 'lt:1/1/8:',
+            '4360' => 'lt:1/1/9:',
+            '4361' => 'lt:1/1/10:',
+            '4362' => 'lt:1/1/11:',
+            '4417' => 'vlt:1/1/63:',
+            '4418' => 'vlt:1/1/64:',
+            '4481' => 'eqptSlotId:4481', // Unknown Card Typ not listed by "show equitment slot"
+            '12545' => 'ctrl:3/1:',
+            '12547' => 'lt:3/1/1:',
+            '12548' => 'lt:3/1/2:',
+            '16641' => 'ctrl:4/1:',
+            '16643' => 'lt:4/1/1:',
+            '16644' => 'lt:4/1/2:',
+            '20737' => 'ctrl:5/1:',
+            '20739' => 'lt:5/1/1:',
+            '20740' => 'lt:5/1/2:',
+            '24833' => 'ctrl:6/1:',
+            '24835' => 'lt:6/1/1:',
+            '24836' => 'lt:6/1/2:',
+            '28929' => 'ctrl:7/1:',
+            '28931' => 'lt:7/1/1:',
+            '28932' => 'lt:7/1/2:',
+	];
+// Slot IDs for Nokia ISAM 7362
+    } elseif ($eqptHolderActualType == 'CFXR-A') {
+        $slotTable = [
+            '4353' => 'nt:',
+            '4355' => 'lt:1/1/1:',
+        ]; }
+} else {
 // Slot mapping
 // FIXME Hardcoded to Num Based Slot Numbering. This should be pulled from SNMP
 $slotTable = [
@@ -17,10 +127,15 @@ $slotTable = [
     '4362' => 'lt:1/1/8/',
     '4481' => '4481', // FIXME define this
 ];
+}
 $pre_cache['nokiaIsamSlot'] = snmpwalk_cache_multi_oid($device, 'eqptBoardContainerOffset', [], 'ASAM-EQUIP-MIB', 'nokia');
 $pre_cache['nokiaIsamSlot'] = snmpwalk_cache_multi_oid($device, 'eqptBoardIfSlotId', $pre_cache['nokiaIsamSlot'], 'ASAM-EQUIP-MIB', 'nokia');
 foreach ($pre_cache['nokiaIsamSlot'] as $slotId => $slot) {
     $pre_cache['nokiaIsamSlot'][$slotId]['numBasedSlot'] = $slotTable[$slotId];
+    $pre_cache['nokiaProductName'] = $eqptHolderTable[$eqptHolderActualType];
+    if ($pre_cache['nokiaProductName'] == null) {
+        $pre_cache['nokiaProductName'] = 'Shelf:';
+    }
 }
 
 // Port mapping
diff --git a/includes/discovery/sensors/state/nokia-isam.inc.php b/includes/discovery/sensors/state/nokia-isam.inc.php
index 9b44457d6..dbc8b5669 100644
--- a/includes/discovery/sensors/state/nokia-isam.inc.php
+++ b/includes/discovery/sensors/state/nokia-isam.inc.php
@@ -6,8 +6,12 @@ foreach ($snmp_data['nokiaIsamEqpBoardTable'] as $index => $data) {
     if (is_array($data)) {
         $oid = '.1.3.6.1.4.1.637.61.1.23.3.1.7.' . $index;
         $state_name = 'eqptBoardOperError';
-        $current = $data['eqptBoardOperError'];
-        $descr = $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] . ' ' . $data['eqptSlotActualType'] . ' (' . $data['eqptSlotPlannedType'] . ')';
+	$current = $data['eqptBoardOperError'];
+	// Skip empty and not planned boards / false table entrys
+        if ($current == 0 OR $data['eqptSlotActualType'] == 'EMPTY' AND $data['eqptSlotPlannedType'] == 'NOT_PLANNED') {
+		continue;
+	}
+	$descr = $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] . ' ' . $data['eqptSlotActualType'] . ' (' . $data['eqptSlotPlannedType'] . ')';
         $states = [
             ['value' => 1, 'generic' => 0, 'graph' => 0, 'descr' => 'no-error'],
             ['value' => 2, 'generic' => 1, 'graph' => 0, 'descr' => 'type-mismatch'],
@@ -32,9 +36,26 @@ foreach ($snmp_data['nokiaIsamEqpBoardTable'] as $index => $data) {
             ['value' => 255, 'generic' => 2, 'graph' => 0, 'descr' => 'unknown-error'],
         ];
         create_state_index($state_name, $states);
+	if ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:2/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:2/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:2/1/2:') {
+            $group = 'Remote Shelf: 2';
+	} elseif ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:3/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:3/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:3/1/2:') {
+            $group = 'Remote Shelf: 3';
+	} elseif ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:4/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:4/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:4/1/2:') {
+            $group = 'Remote Shelf: 4';
+	} elseif ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:5/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:5/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:5/1/2:') {
+            $group = 'Remote Shelf: 5';
+	} elseif ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:6/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:6/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:6/1/2:') {
+            $group = 'Remote Shelf: 6';
+	} elseif ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:7/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:7/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:7/1/2:') {
+            $group = 'Remote Shelf: 7';
+	} elseif ($pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'ctrl:8/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:8/1/1:' OR $pre_cache['nokiaIsamSlot'][$index]['numBasedSlot'] == 'lt:8/1/2:') {
+            $group = 'Remote Shelf: 8';
+        } else {
+            $group = $pre_cache['nokiaProductName'];
+        }
 
         //Discover Sensors
-        discover_sensor(null, 'state', $device, $oid, $index, $state_name, $descr, 1, 1, null, null, null, null, $current);
+        discover_sensor(null, 'state', $device, $oid, $index, $state_name, $descr, 1, 1, null, null, null, null, $current, 'snmp', null, null, null, $group);
     }
 }

